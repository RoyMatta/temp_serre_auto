#include "config.h"
#include <Wire.h>
#include <MCP23017.h>

MCP23017 mcp = MCP23017(MCP23017_ADDR);

void buttonSetup(){
    for (int i = 0; i < 8; i++) {mcp.pinMode(ILogic[i].pin, INPUT_PULLUP);}
    for (int i = 8; i < 13; i++){pinMode(ILogic[i].pin, INPUT_PULLUP);}
}

bool readInput(int pin, bool isMCP) {
  if (!isMCP) {return !digitalRead(pin);} 
  else {return !mcp.digitalRead(pin);}
}

bool updateButtonState(int index, bool isMCP) {
    ILogic[index].etat_pin = readInput(ILogic[index].pin, isMCP);
    if (ILogic[index].etat_pin != ILogic[index].etat_var) {
        if (ILogic[index].timestamp == 0) {
            ILogic[index].timestamp = millis();
        }
        if (millis() - ILogic[index].timestamp > ANTIREBOND) {
            if (ILogic[index].type) {
                ILogic[index].etat_var = !ILogic[index].etat_var;
            } else {
                ILogic[index].etat_var = ILogic[index].etat_pin;
            }
            ILogic[index].timestamp = 0;
            return true;
        }
    }
    return false;
}

void setup() {
    Serial.begin(115200);

    Wire.begin(SDA_pin,SCL_pin);
    mcp.init();

    buttonSetup();   
}

void loop() {
    for (int i = 0; i < 13; i++){
        if (i < 8) {
            updateButtonState(i, true); // MCP23017
        } else {
            updateButtonState(i, false); // GPIO
        }
        Serial.print(ILogic[i].nom);
        Serial.print(": Etat de la pin | Variable : ");
        Serial.print(" --> ");
        Serial.print(ILogic[i].etat_pin);
        Serial.print(" | ");
        Serial.println(ILogic[i].etat_var);
    }
}